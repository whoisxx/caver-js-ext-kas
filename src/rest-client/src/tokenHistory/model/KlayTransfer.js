/*
 * Token History API
 * # Introduction  Token History API allows users to search for information and transfer records on KLAY, FT (KIP-7, Labeled ERC-20), and NFT (KIP-17, Labeled ERC-721) tokens. You can use Token History API to check the records of a specific EOA transferring KLAY, retrieve NFT information, or other purposes.  For more details on Token History API, refer to our [tutorial](https://klaytn.com).  For any questions regarding this document or KAS, visit [the developer forum](https://forum.klaytn.com/).
 *
 * OpenAPI spec version: 1.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.16
 *
 * Do not edit the class manually.
 *
 */

;(function(root, factory) {
    if (typeof define === 'function' && define.amd) {
        // AMD. Register as an anonymous module.
        define(['../../ApiClient'], factory)
    } else if (typeof module === 'object' && module.exports) {
        // CommonJS-like environments that support module.exports, like Node.
        module.exports = factory(require('../../ApiClient'))
    } else {
        // Browser globals (root is window)
        if (!root.TokenHistoryApi) {
            root.TokenHistoryApi = {}
        }
        root.TokenHistoryApi.KlayTransfer = factory(root.TokenHistoryApi.ApiClient)
    }
})(this, function(ApiClient) {
    /**
     * The KlayTransfer model module.
     * @class KlayTransfer
     * @version 1.0
     */

    /**
     * Constructs a new <code>KlayTransfer</code>.
     * @alias KlayTransfer
     * @class
     * @param feePayer {String} Fee delegation account address (20-byte)
     * @param feeRatio {Number} Fee delegation ratio
     * @param fee {String} Gas fee
     * @param from {String} Sender EOA (20-byte)
     * @param to {String} Receiver EOA (20-byte)
     * @param transactionHash {String} Transaction hash
     * @param transactionIndex {Number} Transaction index
     * @param transferType {String} Type of transaction detail
     * @param typeInt {Number} Transaction type
     * @param value {String} The amount of tranferring KLAY (in hexadecimal)
     */
    const KlayTransfer = function(feePayer, feeRatio, fee, from, to, transactionHash, transactionIndex, transferType, typeInt, value) {
        this.feePayer = feePayer
        this.feeRatio = feeRatio
        this.fee = fee
        this.from = from
        this.to = to
        this.transactionHash = transactionHash
        this.transactionIndex = transactionIndex
        this.transferType = transferType
        this.typeInt = typeInt
        this.value = value
    }

    /**
     * Constructs a <code>KlayTransfer</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {KlayTransfer} obj Optional instance to populate.
     * @return {KlayTransfer} The populated <code>KlayTransfer</code> instance.
     * @memberof KlayTransfer
     */
    KlayTransfer.constructFromObject = function(data, obj) {
        if (data) {
            obj = obj || new KlayTransfer()
            if (data.hasOwnProperty('feePayer')) obj.feePayer = ApiClient.convertToType(data.feePayer, 'String')
            if (data.hasOwnProperty('feeRatio')) obj.feeRatio = ApiClient.convertToType(data.feeRatio, 'Number')
            if (data.hasOwnProperty('fee')) obj.fee = ApiClient.convertToType(data.fee, 'String')
            if (data.hasOwnProperty('from')) obj.from = ApiClient.convertToType(data.from, 'String')
            if (data.hasOwnProperty('to')) obj.to = ApiClient.convertToType(data.to, 'String')
            if (data.hasOwnProperty('transactionHash')) obj.transactionHash = ApiClient.convertToType(data.transactionHash, 'String')
            if (data.hasOwnProperty('transactionIndex')) obj.transactionIndex = ApiClient.convertToType(data.transactionIndex, 'Number')
            if (data.hasOwnProperty('transferType')) obj.transferType = ApiClient.convertToType(data.transferType, 'String')
            if (data.hasOwnProperty('typeInt')) obj.typeInt = ApiClient.convertToType(data.typeInt, 'Number')
            if (data.hasOwnProperty('value')) obj.value = ApiClient.convertToType(data.value, 'String')
        }
        return obj
    }

    /**
     * Fee delegation account address (20-byte)
     * @type {String}
     * @memberof KlayTransfer
     */
    KlayTransfer.prototype.feePayer = undefined

    /**
     * Fee delegation ratio
     * @type {Number}
     * @memberof KlayTransfer
     */
    KlayTransfer.prototype.feeRatio = undefined

    /**
     * Gas fee
     * @type {String}
     * @memberof KlayTransfer
     */
    KlayTransfer.prototype.fee = undefined

    /**
     * Sender EOA (20-byte)
     * @type {String}
     * @memberof KlayTransfer
     */
    KlayTransfer.prototype.from = undefined

    /**
     * Receiver EOA (20-byte)
     * @type {String}
     * @memberof KlayTransfer
     */
    KlayTransfer.prototype.to = undefined

    /**
     * Transaction hash
     * @type {String}
     * @memberof KlayTransfer
     */
    KlayTransfer.prototype.transactionHash = undefined

    /**
     * Transaction index
     * @type {Number}
     * @memberof KlayTransfer
     */
    KlayTransfer.prototype.transactionIndex = undefined

    /**
     * Type of transaction detail
     * @type {String}
     * @memberof KlayTransfer
     */
    KlayTransfer.prototype.transferType = undefined

    /**
     * Transaction type
     * @type {Number}
     * @memberof KlayTransfer
     */
    KlayTransfer.prototype.typeInt = undefined

    /**
     * The amount of tranferring KLAY (in hexadecimal)
     * @type {String}
     * @memberof KlayTransfer
     */
    KlayTransfer.prototype.value = undefined

    return KlayTransfer
})
