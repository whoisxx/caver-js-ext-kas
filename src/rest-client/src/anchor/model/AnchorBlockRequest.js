/*
 * Anchor API
 * # Introduction This document discusses Klaytn API Service (KAS) Anchor API. Anchor API features functions for sending metadata to prove data reliability and ensuring the reliability of service chain data to the Klaytn main chain.     # Error Codes  ## 400: Bad Request   | Code | Messages |   | --- | --- |   | 1071010 | data don't exist 1071615 | its value is out of range; size 1072100 | same payload ID or payload was already anchored 1072101 | all configured accounts have insufficient funds |   # Authentication  <!-- ReDoc-Inject: <security-definitions> -->
 *
 * OpenAPI spec version: 1.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.17
 *
 * Do not edit the class manually.
 *
 */

;(function(root, factory) {
    if (typeof define === 'function' && define.amd) {
        // AMD. Register as an anonymous module.
        define(['../../ApiClient'], factory)
    } else if (typeof module === 'object' && module.exports) {
        // CommonJS-like environments that support module.exports, like Node.
        module.exports = factory(require('../../ApiClient'))
    } else {
        // Browser globals (root is window)
        if (!root.AnchorApi) {
            root.AnchorApi = {}
        }
        root.AnchorApi.AnchorBlockRequest = factory(root.AnchorApi.ApiClient)
    }
})(this, function(ApiClient) {
    /**
     * The AnchorBlockRequest model module.
     * @class AnchorBlockRequest
     * @version 1.0
     */

    /**
     * Constructs a new <code>AnchorBlockRequest</code>.
     * Anchor block request schema
     * @alias AnchorBlockRequest
     * @class
     * @param operator {String} Operator account address
     * @param payload {Object.<String, Object>} Anchor data. ID is set to SHA256 (payload) by default if an ID is not provided. It receives a string-type ID value and determines that it is not set if it is not a string type.
     */
    const AnchorBlockRequest = function(operator, payload) {
        this.operator = operator
        this.payload = payload
    }

    /**
     * Constructs a <code>AnchorBlockRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {AnchorBlockRequest} obj Optional instance to populate.
     * @return {AnchorBlockRequest} The populated <code>AnchorBlockRequest</code> instance.
     * @memberof AnchorBlockRequest
     */
    AnchorBlockRequest.constructFromObject = function(data, obj) {
        if (data) {
            obj = obj || new AnchorBlockRequest()
            if (data.hasOwnProperty('operator')) obj.operator = ApiClient.convertToType(data.operator, 'String')
            if (data.hasOwnProperty('payload')) obj.payload = ApiClient.convertToType(data.payload, { String: Object })
        }
        return obj
    }

    /**
     * Operator account address
     * @type {String}
     * @memberof AnchorBlockRequest
     */
    AnchorBlockRequest.prototype.operator = undefined

    /**
     * Anchor data. ID is set to SHA256 (payload) by default if an ID is not provided. It receives a string-type ID value and determines that it is not set if it is not a string type.
     * @type {Object.<String, Object>}
     * @memberof AnchorBlockRequest
     */
    AnchorBlockRequest.prototype.payload = undefined

    return AnchorBlockRequest
})
