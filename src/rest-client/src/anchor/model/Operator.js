/*
 * Anchor API
 * # Introduction This document discusses Klaytn API Service (KAS) Anchor API. Anchor API features functions for sending metadata to prove data reliability and ensuring the reliability of service chain data to the Klaytn main chain.     # Error Codes  ## 400: Bad Request   | Code | Messages |   | --- | --- |   | 1071010 | data don't exist 1071615 | its value is out of range; size 1072100 | same payload ID or payload was already anchored 1072101 | all configured accounts have insufficient funds |   # Authentication  <!-- ReDoc-Inject: <security-definitions> -->
 *
 * OpenAPI spec version: 1.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.17
 *
 * Do not edit the class manually.
 *
 */

;(function(root, factory) {
    if (typeof define === 'function' && define.amd) {
        // AMD. Register as an anonymous module.
        define(['../../ApiClient', '../model/OperatorSetting'], factory)
    } else if (typeof module === 'object' && module.exports) {
        // CommonJS-like environments that support module.exports, like Node.
        module.exports = factory(require('../../ApiClient'), require('./OperatorSetting'))
    } else {
        // Browser globals (root is window)
        if (!root.AnchorApi) {
            root.AnchorApi = {}
        }
        root.AnchorApi.Operator = factory(root.AnchorApi.ApiClient, root.AnchorApi.OperatorSetting)
    }
})(this, function(ApiClient, OperatorSetting) {
    /**
     * The Operator model module.
     * @class Operator
     * @version 1.0
     */

    /**
     * Constructs a new <code>Operator</code>.
     * Operator information
     * @alias Operator
     * @class
     * @param createdAt {Number} Operator creation time
     * @param operator {String} Operator’s Klaytn account address
     */
    const Operator = function(createdAt, operator) {
        this.createdAt = createdAt
        this.operator = operator
    }

    /**
     * Constructs a <code>Operator</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {Operator} obj Optional instance to populate.
     * @return {Operator} The populated <code>Operator</code> instance.
     * @memberof Operator
     */
    Operator.constructFromObject = function(data, obj) {
        if (data) {
            obj = obj || new Operator()
            if (data.hasOwnProperty('createdAt')) obj.createdAt = ApiClient.convertToType(data.createdAt, 'Number')
            if (data.hasOwnProperty('operator')) obj.operator = ApiClient.convertToType(data.operator, 'String')
            if (data.hasOwnProperty('setting')) obj.setting = OperatorSetting.constructFromObject(data.setting)
        }
        return obj
    }

    /**
     * Operator creation time
     * @type {Number}
     * @memberof Operator
     */
    Operator.prototype.createdAt = undefined

    /**
     * Operator’s Klaytn account address
     * @type {String}
     * @memberof Operator
     */
    Operator.prototype.operator = undefined

    /**
     * @type {OperatorSetting}
     * @memberof Operator
     */
    Operator.prototype.setting = undefined

    return Operator
})
